// Hubitat driver for Govee Light, Plug, Switch driver using Cloud API
// Version 1.0.19
//
// 9-12-22  Initial release
// 9-30-22  Resolve issue with polling, Enhance Debug Logging
// 10-5-22  Adding Lan Control options to driver. Additional Logging.
// 10-12-22 Updated text verbiage on preferences
// 11-3-22  Send Rate Limits to Parent app and adjust to work with limited devices.
// 11-4-22  Added methods for Lan control to have proper fade control. 
// 11-5-22  Updated to reflect on state when options other 'On' switch are used
// 11-22-22 Updated to validate successful api call before changing driver status.
// 12-19-22 Modifieid polling to properly allow a value of 0 for no polling
// 1-21-23  Changed position of setlLevl action in setColor command.
// 1-30-23  Added check to see if device is in Retry state and abort new commands until cleared.
// 4-4-23   Added ability for parent app to update API Key associated with device
// 4-7-23   Added reset of Cloud API State to getDeviceStatus and initialize routine

import hubitat.helper.InterfaceUtils
import hubitat.helper.HexUtils
import groovy.transform.Field
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder

def commandPort() { "4003" }

 @Field static Map sceneEffects = [
     1:"Ocean/Deep Sea",
     2:"Romantic",
     3:"Sunset/Sunset Glow",
     4:"Rainbow",
     5:"Fire",
     6:"Cozy",
     7:"Forest",
     8:"Flower Field",
     9:"Sunrise",
     10:"Sunset",
     11:"Warm White",
     12:"Daylight",     
     13:"Cool White",     
     101:"Illusion",
     102:"Mirage",
     103:"Aurora",
     104:"Holloween D",
     105:"Nebula",
     501:"Aurora-B"
] 

// First 30 scenese are setup to replicate Hubitat Wiz Bulb integration Scense so these can be used together
// Sense above 100 will be other standard scense that are part of the Govee devices as they are found
// Special scense like 3d effects may have their own section as well to allow management.

 @Field static Map lightEffects = [
    H6052:[ //Aura Table Lamp
        1:["name":"Ocean/Deep Sea", "cmd":['"MwUEIAAAAAAAAAAAAAAAAAAAABI\\="']],
        2:["name":"Romantic", "cmd":['"owABCgcJVWT///8FDO5x/xgZGho\\="','"owEbHB0eHyAhIiMYiwD/AAECA9U\\="','"owIEBQYHCAkKCwwNDg8QERITFLU\\="','"owMVFhck/P8AYGFiY2RlZmdoaZI\\="','"owRqa2xtbm9wcXJzdHV2d3h5et0\\="','"owV7fH1+f4CBgoMk/38AJCUmJ3k\\="','"owYoKSorLC0uLzAxMjM0NTY3OJ0\\="','"owc5Ojs8PT4/QEFCQ0RFRkcY/3s\\="','"owivAEhJSktMTU5PUFFSU1RVVlM\\="','"o/9XWFlaW1xdXl8AAAAAAAAAAAs\\="','"MwUEMgEAAAAAAAAAAAAAAAAAAAE\\="']],
        3:["name":"Sunset", "cmd":['"owABCwcOAGQAAAAJDP8AAAABAj0\\="','"owEDBAUGBwgJCgsM/wgADA0OD1o\\="','"owIQERITFBUWFwv/UQAYGRobHBg\\="','"owMdHh8gISIB/1AAIxj/ZgAkJZI\\="','"owQmJygpKissLS4vMDEyMzQ1NpE\\="','"owU3ODk6Oxj/fwA8PT4/QEFCQwk\\="','"owZERUZHSElKS0xNTk9QUVJTGL0\\="','"owf/ngBUVVZXWFlaW1xdXl9gYcQ\\="','"owhiY2RlZmdoaWprDP/uAGxtbtg\\="','"owlvcHFyc3R1dncM//8AeHl6e8k\\="','"o/98fX5/gIGCgwAAAAAAAAAAAFw\\="','"MwUELQEAAAAAAAAAAAAAAAAAAB4\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"MwUEIQAAAAAAAAAAAAAAAAAAABM\\="']],
        7:["name":"Forest", "cmd":['"MwUEEgAAAAAAAAAAAAAAAAAAACA\\="']],
        8:["name":"Flower Field", "cmd":['"owABCAcJZFP//wAGGAD/AD9MTk8\\="','"owFQVFVZW19iY2Rmam9wc3V2eNA\\="','"owJ6foCDBv8AblNdbXJ3ewSLAKM\\="','"owP/Q2drgiX/fwAAAQIDBAUGBzc\\="','"owQICQoLDA0ODxAREhMUFRYXGL8\\="','"owUZGhscHR4fICEiI0kS/wAAMig\\="','"owZBRkhNUVZYWmFlaGx0eX1/gSw\\="','"o/8DAP//Sl5gAAAAAAAAAAAAACs\\="','"MwUEuwsAAAAAAAAAAAAAAAAAAII\\="']],
        9:["name":"Sunrise", "cmd":['"owABCwcJAGQAAAAIDIsA/0hJSvg\\\\u003d"','"owFLTE1OT1BRUlMMABKJbG1ub34\\\\u003d"','"owJwcXJzdHV2dwz/GfRgYWJjZNs\\\\u003d"','"owNlZmdoaWprDN400lRVVldYWfE\\\\u003d"','"owRaW1xdXl8Y/wAAAAECAwQFBkY\\\\u003d"','"owUHCAkKCwwNDg8QERITFBUWF6E\\\\u003d"','"owYY/38AGBkaGxwdHh8gISIjJBk\\\\u003d"','"owclJicoKSorLC0uLxj//wAwMZk\\\\u003d"','"owgyMzQ1Njc4OTo7PD0+P0BBQuk\\\\u003d"','"owlDREVGRwwAAP94eXp7fH1+fxo\\\\u003d"','"o/+AgYKDAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUELAEAAAAAAAAAAAAAAAAAAB8\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"owABCwcOAGQAAAAJDP8AAAABAj0\\\\u003d"','"owEDBAUGBwgJCgsM/wgADA0OD1o\\\\u003d"','"owIQERITFBUWFwv/UQAYGRobHBg\\\\u003d"','"owMdHh8gISIB/1AAIxj/ZgAkJZI\\\\u003d"','"owQmJygpKissLS4vMDEyMzQ1NpE\\\\u003d"','"owU3ODk6Oxj/fwA8PT4/QEFCQwk\\\\u003d"','"owZERUZHSElKS0xNTk9QUVJTGL0\\\\u003d"','"owf/ngBUVVZXWFlaW1xdXl9gYcQ\\\\u003d"','"owhiY2RlZmdoaWprDP/uAGxtbtg\\\\u003d"','"owlvcHFyc3R1dncM//8AeHl6e8k\\\\u003d"','"o/98fX5/gIGCgwAAAAAAAAAAAFw\\\\u003d"','"MwUELQEAAAAAAAAAAAAAAAAAAB4\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"MwUEHAAAAAAAAAAAAAAAAAAAAC4\\="']]
    ], 
    H6065:[ // Govee Glide Y Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABAgQmFU8DBAEgBQAEABKJAGQ\\="','"o/8A/xe0/wD//wAAAAAAAAAAAP8\\="','"MwUETQsCRwAAAAAAAAAAAAAAADE\\="']],
        2:["name":"Romantic", "cmd":['"owABAgQnFUIBAAEFAAWLAP/kAEQ\\="','"o//n/zuD/2lK/5F2AAAAAAAAADg\\="','"MwUEWgsCRwAAAAAAAAAAAAAAACY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABAgQmFSQDAgEeBQAFZACX34E\\="','"o/8AP/9TAP+cAPlMAAAAAAAAABk\\="','"MwUETwsCRwAAAAAAAAAAAAAAADM\\="']],
        4:["name":"Rainbow", "cmd":['"owABAgQmFVADBAEmBQAH/wAA/+U\\="','"o/9/AP//AAD/AAAA/wD//4sA/1c\\="','"MwUEUAsCRwAAAAAAAAAAAAAAACw\\="']],
        5:["name":"Fire", "cmd":['"owABAgQmFVUDFAwCAv8BJQUABQI\\="','"o//YAQH7Vgf/cQD/qwUBAQEAAPA\\="','"MwUEVAsCRwAAAAAAAAAAAAAAACg\\="']],
        7:["name":"Forest", "cmd":['"owABAgQmFS0DAgEiBQAG/545AMM\\="','"o///AAfKAJnVE8rsAf/rJAAAACY\\="','"MwUETgsCRwAAAAAAAAAAAAAAADI\\="']],
        8:["name":"Colorful", "cmd":['"owABAwQmFWEDBwFkBQAIAAD/AGQ\\\\u003d"','"owEA/wD//wD/////AP//AP8Absw\\\\u003d"','"o///AG4AAAAAAAAAAAAAAAAAAM0\\\\u003d"','"MwUEWQsCRwAAAAAAAAAAAAAAACU\\\\u003d"']],
        101:["name":"Illusion", "cmd":['"owABAgQnFR4BAAEFAAJscdkKCks\\="','"o/8KAAAAAAAAAAAAAAAAAAAAAFY\\="','"MwUEVh0ALQAAAAAAAAAAAAAAAFQ\\="']],
        102:["name":"Thunderclap", "cmd":['"owABAgQnPFMAAoM47Nvk7gAAAGg\\\\u003d"','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUE2RwARwAAAAAAAAAAAAAAALA\\\\u003d"']],
        107:["name":"Meteor", "cmd":['"owABAgQmFUsDBAEmBQAGAQEBAf8\\\\u003d"','"o/8BAQEBAYsA/wEBAQEBAQAAACk\\\\u003d"','"MwUEVQsCRwAAAAAAAAAAAAAAACk\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABAgQmFTMDAQEeBQAGGf+ZXJk\\="','"o//QHwOrNgCLRQBkACkAKQAAAKc\\="','"MwUEUQsCRwAAAAAAAAAAAAAAAC0\\="']]
    ],
    H6066:[ // Gove Glide Hexa Pro
        1:["name":"Ocean/Deep Sea", "cmd":['"owABAgQmFS0CAgFkBQAEABKJAEU\\="','"o/8A/xe0/wD//wAAAAAAAAAAAP8\\="','"MwUE2AkCLQAAAAAAAAAAAAAAAMw\\="']],
        2:["name":"Romantic", "cmd":['"owABAgQmFTIBAgFIBQAFiwD/5H8\\="','"o/8A5/87g/9pSv+RdgAAAAAAADg\\="','"MwUE4gkCLQAAAAAAAAAAAAAAAPY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABAgQmFQoBAgFkBQAFZACX39c\\="','"o/8AP/9TAP+cAPlMAAAAAAAAABk\\="','"MwUE2gkCLQAAAAAAAAAAAAAAAM4\\="']],
        4:["name":"Rainbow", "cmd":['"owABAgQmFVIBAgFkBQAH/wAA/6E\\="','"o/9/AP//AAD/AAAA/wD//4sA/1c\\="','"MwUE2wkCLQAAAAAAAAAAAAAAAM8\\="']],
        5:["name":"Fire", "cmd":['"owABAgQmFUcBAgFkBQAF2AEB+5U\\="','"o/9WB/9xAP+rBf/SAAAAAAAAAP8\\="','"MwUE3gkCLQAAAAAAAAAAAAAAAMo\\="']],
        7:["name":"Forest", "cmd":['"owABAgQmFTYBAgFkBQAG/545AJw\\="','"o///AAfKAJnVE8rsAf/rJAAAACY\\="','"MwUE2QkCLQAAAAAAAAAAAAAAAM0\\="']],
        8:["name":"Flower Field", "cmd":['"owABAgQmGxYACgEFAAf/AAD/f/k\\="','"o/8A//8AAP8AAAD/AP//iwD/ACg\\="','"MwUE3wkKLQAAAAAAAAAAAAAAAMM\\="']],
        101:["name":"Illusion", "cmd":['"owABAgQnFR4BAAEFAAJscdkKCks\\="','"o/8KAAAAAAAAAAAAAAAAAAAAAFY\\="','"MwUEVh0ALQAAAAAAAAAAAAAAAFQ\\="']],
        102:["name":"Mirage", "cmd":['"owABAgQnFR0BAAEFAAIAD57//x0\\\\u003d"','"o/9lAAAAAAAAAAAAAAAAAAAAADk\\\\u003d"','"MwUEDQoALQAAAAAAAAAAAAAAABg\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABAgQmFTwBAgEeBQAFGf+ZXJQ\\="','"o//QHwOrNgCLRQBkAAAAAAAAAKc\\="','"MwUE3AkCLQAAAAAAAAAAAAAAAMg\\="']],
        106:["name":"Cubic", "cmd":['"owABAwQmBwoBCgEFAAj//wD/8IY\\\\u003d"','"owFsAQEBit1pAKkAAQEBaNjWBzg\\\\u003d"','"o/++uAAAAAAAAAAAAAAAAAAAAFo\\\\u003d"','"MwUEBAoKLQAAAAAAAAAAAAAAABs\\\\u003d"']],
        104:["name":"Test DIY", "cmd":['"owABAgQmBzIACAEFAAT/LgBl//Q\\="','"o/86G4D/Dev/AAAAAAAAAAAAABs\\="','"MwUKwQAAAAAAAAAAAAAAAAAAAP0\\="']]
    ], 
    H6072:[ // Lyra Lamp
        1:["name":"Ocean/Deep Sea", "cmd":['"MwUEIAAAAAAAAAAAAAAAAAAAABI\\="']],
        2:["name":"Romantic", "cmd":['"MwUEBwAAAAAAAAAAAAAAAAAAADU\\="']],
        3:["name":"Sunset", "cmd":['"owABBwIDIGQAAAUAAf//AAAAAOQ\\="','"owEDADID/38A/38A/38AAAAAABA\\="','"owIAAAEaQAAAAQAB//8AAAAAAvg\\="','"owPIMgH/AAAAAAAAAAAAJkAAAMI\\="','"owQBAgP//wDIAAD/AAJkCgoAAPY\\="','"owUByAoKAP8yAf9/AAAAAAAAACM\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUENAgAAAAAAAAAAAAAAAAAAA4\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABBwIEGiQAAAECAf8AA4AUFOM\\="','"owED4woB/zkHFwD/EwD/ABoiALQ\\="','"owIAAQIB/wADgBQUA4AUAf9HB/Y\\="','"owMXAP8AAIAAHQAAAAECAf8NAic\\="','"owT/CgoA9BQC/wAA/0AHAACAAH0\\="','"owUAgAAaJgAAAQIB/wADgBQUA2c\\="','"o/+AFAH/FwcXAf0AAIAAAAAAAE0\\="','"MwUEOggAAAAAAAAAAAAAAAAAAAA\\="']],
        7:["name":"Forest", "cmd":['"MwUEEgAAAAAAAAAAAAAAAAAAACA\\="']],
        8:["name":"Journee of Flowers", "cmd":['"owABCQIFGgAAAAECAf9MA+oUFO4\\="','"owEBzRQB/38AEgD/AACAACAgAJY\\="','"owIAAQIC/0wD7xQU/wAAgBQUAYE\\="','"owP0FAH/AAASAP8AAIAAGiIAAOs\\="','"owQBAgH/TAP/FBQA8xQBAP8AEuE\\="','"owUA/wAAgAAaJAAAAQIB/0wD/6o\\="','"owYUFADzFAEA//8SAP8AAIAAGjQ\\="','"owcmAAABAgH/SwP/FBQA5hQB/8Q\\="','"o/8X/xIA/wAAgAAAAAAAAAAAANk\\="','"MwUEOwgAAAAAAAAAAAAAAAAAAAE\\="']],
        9:["name":"Sunrise", "cmd":['"owABCAIDGhQAAAEAAf//AAAAAKU\\\\u003d"','"owEA/zIB//8AAAAAAAAAA0dQAHo\\\\u003d"','"owIAEAAB//8AAAAAAvsUEP9/AM0\\\\u003d"','"owP/fwD/AAD/AAD/FgD/FgD/AN8\\\\u003d"','"owQA/38A/38A//8A//8A//8A/1g\\\\u003d"','"owX/AP//AP//AP//AAAAAAAAAFk\\\\u003d"','"owYCIGQAAAEAAf//AAD//wIAMtM\\\\u003d"','"o/8DBoH+B7T/AAD/AAAAAAAAAZQ\\\\u003d"','"MwUEMwgAAAAAAAAAAAAAAAAAAAk\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"owABBwIDIGQAAAUAAf//AAAAAOQ\\\\u003d"','"owEDADID/38A/38A/38AAAAAABA\\\\u003d"','"owIAAAEaQAAAAQAB//8AAAAAAvg\\\\u003d"','"owPIMgH/AAAAAAAAAAAAJkAAAMI\\\\u003d"','"owQBAgP//wDIAAD/AAJkCgoAAPY\\\\u003d"','"owUByAoKAP8yAf9/AAAAAAAAACM\\\\u003d"','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUENAgAAAAAAAAAAAAAAAAAAA4\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBAIBOwAAAAwAAf//AQAAAJI\\="','"owEC+wAM/8kAjv8Ajv8A+v8AAGQ\\="','"owL//wD//wD//wD//wCp/4sA/4M\\="','"o/+LAP/v/wAAAAAAAAAAAAAAADg\\="','"MwUENggAAAAAAAAAAAAAAAAAAAw\\="']]
    ],
    H6076:[ // Basics Floor Lamp
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBgIDGgAAAAEAAf8AAIAUFMA\\="','"owEAgBQBAP8AAACAAACAAB0AANU\\="','"owIAAQIB/wAAgBQUANtkAv//AGE\\="','"owMA/wAAAIAAAIAAHQAAAAECAUA\\="','"owT/AAKAFBQA22QCAP8A//8AAJg\\="','"o/8AgAAAgAAAAAAAAAAAAAAAAFw\\="','"MwUEbAgAAAAAAAAAAAAAAAAAAFY\\="']],
        2:["name":"Romantic", "cmd":['"owABBAICIAAAAAMCAXAPA/cUFA0\\="','"owEDABQD/38A//8A/3MHEQD4AFQ\\="','"owIAgAAaAAAAAQAB/2UAwRQUAGA\\="','"o/+AFAGwB/8AAIAAAIAAAAAAAIE\\="','"MwUEcQgAAAAAAAAAAAAAAAAAAEs\\="']],
        3:["name":"Sunset", "cmd":['"owABBwIDIGAAAAUAAf//AAAAAOA\\="','"owEDADID/38A/38A/38AAAAAABA\\="','"owIAAAEaAAAAAQAB//8AAAAAArg\\="','"owPIMgH/AAAAAAAAAAAAJgAAAII\\="','"owQBAgP//wLIAAD/AABkCgoAAPY\\="','"owUByAoKAP8yAf9/AAAAAAAAACM\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUEaQgAAAAAAAAAAAAAAAAAAFM\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABBwIEGkMAAAECAUwAA4AUFDc\\="','"owED4woB/zkHFwD9EwD9AB0AAJE\\="','"owIAAQIB/w0C/woKAPQUAv8AALE\\="','"owP/QAcAAIAAAIAAGkYAAAECAUY\\="','"owR+AAOAFBQDgBQB/xcHFwH9AMg\\="','"owUAgAAaQwAAAQIBfgADgBQUA4M\\="','"o/+AFAH/FwcXAf0AAIAAAAAAAE0\\="','"MwUEZwgAAAAAAAAAAAAAAAAAAF0\\="']],
        7:["name":"Forest", "cmd":['"owABBgIDGgAAAAEAAf8AAIAUFMA\\="','"owEAgBQBAP8AAACAAACAAB0AANU\\="','"owIAAQIB/wAAgBQUANtkAv//AGE\\="','"owMA/wAAAIAAAIAAHQAAAAECAUA\\="','"owT/AAKAFBQA22QCAP8A//8AAJg\\="','"o/8AgAAAgAAAAAAAAAAAAAAAAFw\\="','"MwUEbAgAAAAAAAAAAAAAAAAAAFY\\="']],
        8:["name":"Blossom", "cmd":['"owABCwIEKTAAAAEAAf//AIAUFDY\\="','"owEB8hQG/wAA/38AcP6aB3H/9VQ\\="','"owIX////ABYA9wAAgAApIwAAASM\\="','"owMAAf//AIAUFAHyFAb/AAD/f78\\="','"owQAcP6aByz//hH+//8AFAD3AJU\\="','"owUAgAApJQAAAQAB//8AgBQUAas\\="','"owbyFAb/AAD/fwBw/poHXP//B3I\\="','"owf3//8AFgD3AACAACk3AAABAC0\\="','"owgB//8AgBQUAfIUBv8AAP9/ALQ\\="','"owlw/poHWf/zB////wAUAPcAAPc\\="','"o/+AAAAAAAAAAAAAAAAAAAAAANw\\="','"MwUEqAkAAAAAAAAAAAAAAAAAAJM\\="']],
        9:["name":"Sunrise", "cmd":['"owABBwIDGhUAAAEAAf//AAAAAKs\\\\u003d"','"owEA/zIB//8AAAAAAAAAAylVABE\\\\u003d"','"owIABQAB//8AAAAAgvsUBv9/AE4\\\\u003d"','"owP/AAD/AAD/fwD//wD//wAAACA\\\\u003d"','"owQAAAAAAh0AAAACAAH//wAA/0Q\\\\u003d"','"owX/AwAyAgAA/we0/wAAAAAAANk\\\\u003d"','"o/8BAAAAAAAAAAAAAAAAAAAAAF0\\\\u003d"','"MwUEaAgAAAAAAAAAAAAAAAAAAFI\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"owABBwIDIGAAAAUAAf//AAAAAOA\\\\u003d"','"owEDADID/38A/38A/38AAAAAABA\\\\u003d"','"owIAAAEaAAAAAQAB//8AAAAAArg\\\\u003d"','"owPIMgH/AAAAAAAAAAAAJgAAAII\\\\u003d"','"owQBAgP//wLIAAD/AABkCgoAAPY\\\\u003d"','"owUByAoKAP8yAf9/AAAAAAAAACM\\\\u003d"','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUEaQgAAAAAAAAAAAAAAAAAAFM\\\\u003d"']],
        107:["name":"Meteor", "cmd":['"owABBwIDIGQAAAUAAf//AAAAAOQ\\\\u003d"','"owEDADID/38A/38A/38AAAAAABA\\\\u003d"','"owIAAAEaQAAAAQAB//8AAAAAAvg\\\\u003d"','"owPIMgH/AAAAAAAAAAAAJkAAAMI\\\\u003d"','"owQBAgP//wDIAAD/AAJkCgoAAPY\\\\u003d"','"owUByAoKAP8yAf9/AAAAAAAAACM\\\\u003d"','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUENAgAAAAAAAAAAAAAAAAAAA4\\\\u003d"']]

    ],
    H61A1:[ // Neon Rope Light 2m
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUE9gcAAAAAAAAAAAAAAAAAAMM\\="']],
        2:["name":"Romantic", "cmd":['"MwUEBwAAAAAAAAAAAAAAAAAAADU\\="']],
        3:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABDAIFHQAAAA4AAXAyA7sUFEE\\="','"owEC1RQC/1kH////AwD/EwD3ASQ\\="','"owIpJwAABAIB/5kC/18eAgD/Bok\\="','"owMAAAD/////bQf/TQf/Dgf/CH4\\="','"owQJEgD3EACAAikhAAAEAgH/mbA\\="','"owUC/18eAgD/BgAAAP////9tB4s\\="','"owb/TQf/Dgf/CAkQAPQQAPcCKTA\\="','"owdDAggGAAH//wCAFBQB6hQG/2w\\="','"owgVB/8ICf8ICf8pB/8HEwAAAIM\\="','"owkTAPcAAIADKSQAAAEAAf8AAD8\\="','"owqAFBQB6RQG/xUH/zkH/44H/3Y\\="','"o/9eB/8HE/8PBxcA9AAA/wQAAAE\\="','"MwUEMggAAAAAAAAAAAAAAAAAAAg\\="']],
        7:["name":"Forest", "cmd":['"owABBwIDJgABAAoCAf8ZAbQKCtk\\="','"owECyBQF//8AAP//////AP//lBI\\="','"owL/ABQBlgAAAAAjAAIPBQIB/wo\\="','"owMUA9gAAAH6CgQE/wC0/wBH/5I\\="','"owT/4/8AAAAAAAAAABoAAAABAl0\\="','"owUB/wUByBQUAu4UAQD/AAAAAJI\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE1AAAAAAAAAAAAAAAAAAAAOY\\="']],
        8:["name":"Flower Field-A", "cmd":['"owABBQICLKACFAoCAf+WAMwAAJE\\="','"owEC4AAH0QBe/wMA/2wA//8A/1g\\="','"owJ/AP8AAPUA/wAAABAA2AAaoFk\\="','"owMAAAEAATIUAAAAAAD6FAHPAKY\\="','"o/9iAAAAAAAAAAAAAAAAAAAAAD4\\="','"MwUE3AcAAAAAAAAAAAAAAAAAAOk\\="']],
        9:["name":"Sunrise", "cmd":['"MwUEAAAAAAAAAAAAAAAAAAAAADI\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA9zIDAP8AAP//qv8AAwCAAE0\\="','"owIAAAAjAAAAAwIB/xkA7wAAAok\\="','"owP3AAR//wD//wCg//8A//8UAWY\\="','"o//3AAD/AAAAAAAAAAAAAAAAAFQ\\="','"MwUE1wAAAAAAAAAAAAAAAAAAAOU\\="']],
        501:["name":"Aurora-B", "cmd":['"owABCQIEI0AAAAECAf8ZA8IKA+I\\="','"owEC5jIED/8ICwf/B/j//wbpAGs\\="','"owIC+AEAgAAjQgAAAQAB/xgDu+Q\\="','"owMKA4LnMgT/03LLhf8NS/9S/wE\\="','"owSZEgHNAAPkACNEAAABAAH/GIc\\="','"owUDuwoDAuUyBAsH/w//CP8G6d0\\="','"owYH+P8QAcwBAIAAJkYAAAEAAZk\\="','"owf/GAO7CgMC5TIFB/j/Cwf//y4\\="','"o/8G6Q//CNz/ERIB3QEAgAAAADY\\="','"MwUE8QgAAAAAAAAAAAAAAAAAAMs\\="']]
    ],
    H61A2:[ // Neon Rope Light 5m
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUE9gcAAAAAAAAAAAAAAAAAAMM\\="']],
        2:["name":"Romantic", "cmd":['"MwUEBwAAAAAAAAAAAAAAAAAAADU\\="']],
        3:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABDAIFHQAAAA4AAXAyA7sUFEE\\="','"owEC1RQC/1kH////AwD/EwD3ASQ\\="','"owIpJwAABAIB/5kC/18eAgD/Bok\\="','"owMAAAD/////bQf/TQf/Dgf/CH4\\="','"owQJEgD3EACAAikhAAAEAgH/mbA\\="','"owUC/18eAgD/BgAAAP////9tB4s\\="','"owb/TQf/Dgf/CAkQAPQQAPcCKTA\\="','"owdDAggGAAH//wCAFBQB6hQG/2w\\="','"owgVB/8ICf8ICf8pB/8HEwAAAIM\\="','"owkTAPcAAIADKSQAAAEAAf8AAD8\\="','"owqAFBQB6RQG/xUH/zkH/44H/3Y\\="','"o/9eB/8HE/8PBxcA9AAA/wQAAAE\\="','"MwUEMggAAAAAAAAAAAAAAAAAAAg\\="']],
        7:["name":"Forest", "cmd":['"owABBwIDJgABAAoCAf8ZAbQKCtk\\="','"owECyBQF//8AAP//////AP//lBI\\="','"owL/ABQBlgAAAAAjAAIPBQIB/wo\\="','"owMUA9gAAAH6CgQE/wC0/wBH/5I\\="','"owT/4/8AAAAAAAAAABoAAAABAl0\\="','"owUB/wUByBQUAu4UAQD/AAAAAJI\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE1AAAAAAAAAAAAAAAAAAAAOY\\="']],
        8:["name":"Flower Field-A", "cmd":['"owABBQICLKACFAoCAf+WAMwAAJE\\="','"owEC4AAH0QBe/wMA/2wA//8A/1g\\="','"owJ/AP8AAPUA/wAAABAA2AAaoFk\\="','"owMAAAEAATIUAAAAAAD6FAHPAKY\\="','"o/9iAAAAAAAAAAAAAAAAAAAAAD4\\="','"MwUE3AcAAAAAAAAAAAAAAAAAAOk\\="']],
        9:["name":"Sunrise", "cmd":['"MwUEAAAAAAAAAAAAAAAAAAAAADI\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA9zIDAP8AAP//qv8AAwCAAE0\\="','"owIAAAAjAAAAAwIB/xkA7wAAAok\\="','"owP3AAR//wD//wCg//8A//8UAWY\\="','"o//3AAD/AAAAAAAAAAAAAAAAAFQ\\="','"MwUE1wAAAAAAAAAAAAAAAAAAAOU\\="']],
        501:["name":"Aurora-B", "cmd":['"owABCQIEI0AAAAECAf8ZA8IKA+I\\="','"owEC5jIED/8ICwf/B/j//wbpAGs\\="','"owIC+AEAgAAjQgAAAQAB/xgDu+Q\\="','"owMKA4LnMgT/03LLhf8NS/9S/wE\\="','"owSZEgHNAAPkACNEAAABAAH/GIc\\="','"owUDuwoDAuUyBAsH/w//CP8G6d0\\="','"owYH+P8QAcwBAIAAJkYAAAEAAZk\\="','"owf/GAO7CgMC5TIFB/j/Cwf//y4\\="','"o/8G6Q//CNz/ERIB3QEAgAAAADY\\="','"MwUE8QgAAAAAAAAAAAAAAAAAAMs\\="']]
    ],
    H61C3:[ //Govee Desk Neon Rope
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"MwUEBwAAAAAAAAAAAAAAAAAAADU\\="']],
        3:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABDAIFHQAAAA4AAXAyA7sUFEE\\="','"owEC1RQC/1kH////AwD/EwD3ASQ\\="','"owIpJwAABAIB/5kC/18eAgD/Bok\\="','"owMAAAD/////bQf/TQf/Dgf/CH4\\="','"owQJEgD3EACAAikhAAAEAgH/mbA\\="','"owUC/18eAgD/BgAAAP////9tB4s\\="','"owb/TQf/Dgf/CAkQAPQQAPcCKTA\\="','"owdDAggGAAH//wCAFBQB6hQG/2w\\="','"owgVB/8ICf8ICf8pB/8HEwAAAIM\\="','"owkTAPcAAIADKSQAAAEAAf8AAD8\\="','"owqAFBQB6RQG/xUH/zkH/44H/3Y\\="','"o/9eB/8HE/8PBxcA9AAA/wQAAAE\\="','"MwUEMggAAAAAAAAAAAAAAAAAAAg\\="']],
        7:["name":"Forest", "cmd":['"owABBwIDJgABAAoCAf8ZAbQKCtk\\="','"owECyBQF//8AAP//////AP//lBI\\="','"owL/ABQBlgAAAAAjAAIPBQIB/wo\\="','"owMUA9gAAAH6CgQE/wC0/wBH/5I\\="','"owT/4/8AAAAAAAAAABoAAAABAl0\\="','"owUB/wUByBQUAu4UAQD/AAAAAJI\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE1AAAAAAAAAAAAAAAAAAAAOY\\="']],
        8:["name":"Flower Field-A", "cmd":['"owABBQICLKACFAoCAf+WAMwAAJE\\="','"owEC4AAH0QBe/wMA/2wA//8A/1g\\="','"owJ/AP8AAPUA/wAAABAA2AAaoFk\\="','"owMAAAEAATIUAAAAAAD6FAHPAKY\\="','"o/9iAAAAAAAAAAAAAAAAAAAAAD4\\="','"MwUE3AcAAAAAAAAAAAAAAAAAAOk\\="']],
        9:["name":"Sunrise", "cmd":['"MwUEAAAAAAAAAAAAAAAAAAAAADI\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA9zIDAP8AAP//qv8AAwCAAE0\\="','"owIAAAAjAAAAAwIB/xkA7wAAAok\\="','"owP3AAR//wD//wCg//8A//8UAWY\\="','"o//3AAD/AAAAAAAAAAAAAAAAAFQ\\="','"MwUE1wAAAAAAAAAAAAAAAAAAAOU\\="']]
    ],
    H6172:[ //Outdoor LED Strip Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"MwUEBwAAAAAAAAAAAAAAAAAAADU\\="']],
        3:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\="']],
        4:["name":"Rainbow", "cmd":['"MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="']],
        5:["name":"Fire", "cmd":['"owABDAIFHQAAABYAAXAyA7sUFFk\\="','"owEC1RQC/1kH////AwD/EwD/ASw\\="','"owIpJwAABQIB/5kC/18eAgD/Bog\\="','"owMAAAD/////bQf/TQf/Dgf/CH4\\="','"owQJEgD8EACAAikhAAAGAgH/mbk\\="','"owUC/18eAgD/BgAAAP////9tB4s\\="','"owb/TQf/Dgf/CAkQAP4QAP0CKTA\\="','"owdDAhQUAAH//wCAFBQB6hQG/2I\\="','"owgVB/8ICf8ICf8pB/8HEwAAAIM\\="','"owkTAPwAAIADKSQAAAEAAf8AADQ\\="','"owqAFBQB6RQG/xUH/zkH/44H/3Y\\="','"o/9eB/8HE/8PBxcA+QAA/wQAAAw\\="','"MwUEMggAAAAAAAAAAAAAAAAAAAg\\="']],
        7:["name":"Forest", "cmd":['"owABBwIDJgABAAoCAf8ZAbQKCtk\\="','"owECyBQF//8AAP//////AP//lBI\\="','"owL/ABQBlgAAAAAjAAIPBQIB/wo\\="','"owMUAfsAAAH6CgQE/wC0/wBH/7M\\="','"owT/4/8AAAAAAAAAABoAAAABAl0\\="','"owUB/wUByBQUAu4UAQD/AAAAAJI\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE1AAAAAAAAAAAAAAAAAAAAOY\\="']],
        8:["name":"Flower Field-B", "cmd":['"owABCgIFHSAAAAEAAf//AIAUFBI\\="','"owED9gECAAD//wAAEAD7AAD8AEM\\="','"owIdIgAAAQAB//8AgBQUA/YBAug\\="','"owMA//8A/wAQAPsAAPwAHSQAAHE\\="','"owQBAAH//wCAFBQD9gECiwD//1o\\="','"owV/ABAA+wAA/AAdJgAAAQAB/wo\\="','"owb/AIAUFAP2AQIA/wD//wAQAMM\\="','"owf7AAD8AB0oAAABAAH//wCAFAI\\="','"owgUA/YBAosA/wD//xAA+wAA/Co\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE7QgAAAAAAAAAAAAAAAAAANc\\="']],
        9:["name":"Sunrise", "cmd":['"MwUEAAAAAAAAAAAAAAAAAAAAADI\\\\u003d"']],
        10:["name":"Sunset", "cmd":['"MwUEAQAAAAAAAAAAAAAAAAAAADM\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA9zIDAP8AAP//qv8AAwCAAE0\\="','"owIAAAAjAAAAAwIB/xkA7wAAAok\\="','"owP3AAR//wD//wCg//8A//8UAWY\\="','"o//3AAD/AAAAAAAAAAAAAAAAAFQ\\="','"MwUE1wAAAAAAAAAAAAAAAAAAAOU\\="']]
    ],
    H7020:[ //String Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"owABBwIDI1ABAA8CAf8KAgAAAC0\\="','"owECAAAE/wAA/1oA/3gA5QA2ELo\\="','"owIA+gAAAAAjAAEADwIB/woCAII\\="','"owMAAAIAAAT/AAD/WgD/eADyAIk\\="','"owQcEAD6AAAAABoAAAABAgGWMu0\\="','"owUAAAAAAPoyAf+B/xEAgAAAAH8\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUEDAgAAAAAAAAAAAAAAAAAADY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABCwIFIyAAAAECAf9/ANcUFPg\\="','"owEA8BQE/0EA/4IAxxb+giL+AfE\\="','"owIA8wAAAAEjIgAAAQIB/38A7T0\\="','"owMUFAD2FARmC/+xF//jADn/uRE\\="','"owQAAQDyAAAABSMkAAABAgH/f9Q\\="','"owUA7hQUAPEUBP9BAP9jAPIU/pM\\="','"owaAEP4BAPIAAAADIyYAAAECATw\\="','"owf/fgDwFBQA8hQE/0EA/5YAwCA\\="','"owgH/mQQ/gEA8gAAAAQjKAAAASU\\="','"owkCAf+AAOkUFADuFAT/QQD/lhY\\="','"o/8A7QAk/7IAAQDyAAAAAAAAACs\\="','"MwUE8AcAAAAAAAAAAAAAAAAAAMU\\="']],
        4:["name":"Rainbow", "cmd":['"owABAwIBKQAAAAcCAf/aAv8KClc\\="','"owEDgAoG/wAA/38A//8AAP8AAK0\\="','"o/8A/4sA/xAA8QAAgAAAAAAAALY\\="','"MwUE9AcAAAAAAAAAAAAAAAAAAME\\="']],
        5:["name":"Fire", "cmd":['"owABBAICGgACBAECAf9SAdgAAMw\\="','"owEA2h4B/wAAAwCAAAAABCMAADw\\="','"owIAAQAB//8AAAAAAP0ABPEAHbQ\\="','"o///dQD/wAD/HQcAAP8AAP8AAAw\\="','"MwUE9QcAAAAAAAAAAAAAAAAAAMA\\="']],
        7:["name":"Forest", "cmd":['"owABAwIBIAAAAAgCAf8yAcgyFKs\\="','"owEC+jIDbv8A1f8A1f8AEQKAAGk\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE+gcAAAAAAAAAAAAAAAAAAM8\\="']],
        8:["name":"Flower Field-B", "cmd":['"owABCgIFHSAAAAEAAf//AIAUFBI\\="','"owED9gECAAD//wAAEAD7AAD8AEM\\="','"owIdIgAAAQAB//8AgBQUA/YBAug\\="','"owMA//8A/wAQAPsAAPwAHSQAAHE\\="','"owQBAAH//wCAFBQD9gECiwD//1o\\="','"owV/ABAA+wAA/AAdJgAAAQAB/wo\\="','"owb/AIAUFAP2AQIA/wD//wAQAMM\\="','"owf7AAD8AB0oAAABAAH//wCAFAI\\="','"owgUA/YBAosA/wD//xAA+wAA/Co\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE7QgAAAAAAAAAAAAAAAAAANc\\="']],
        105:["name":"Nebula", "cmd":['"owABBAICIAAAAAkAAf8AAYAUFPA\\\\u003d"','"owEDgBQDAAD/bwf+yQb/BADyEIk\\\\u003d"','"owIA9wAaAAILBgABUxUA6hQUAO4\\\\u003d"','"o//tFAH+/v4AAIAAAPYAAAAAACw\\\\u003d"','"MwUE/AcAAAAAAAAAAAAAAAAAAMk\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA+jIDAP8AAP//qv8AAwCAAEA\\="','"owIAAAAjAAAAAwIB/xkA+gAAApw\\="','"owP6AAR//wD//wCg//8A//8UAWs\\="','"o//6AAD/AAAAAAAAAAAAAAAAAFk\\="','"MwUE8QcAAAAAAAAAAAAAAAAAAMQ\\="']]
    ],
    H7021:[ //String Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"owABBwIDI1ABAA8CAf8KAgAAAC0\\="','"owECAAAE/wAA/1oA/3gA5QA2ELo\\="','"owIA+gAAAAAjAAEADwIB/woCAII\\="','"owMAAAIAAAT/AAD/WgD/eADyAIk\\="','"owQcEAD6AAAAABoAAAABAgGWMu0\\="','"owUAAAAAAPoyAf+B/xEAgAAAAH8\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUEDAgAAAAAAAAAAAAAAAAAADY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABCwIFIyAAAAECAf9/ANcUFPg\\="','"owEA8BQE/0EA/4IAxxb+giL+AfE\\="','"owIA8wAAAAEjIgAAAQIB/38A7T0\\="','"owMUFAD2FARmC/+xF//jADn/uRE\\="','"owQAAQDyAAAABSMkAAABAgH/f9Q\\="','"owUA7hQUAPEUBP9BAP9jAPIU/pM\\="','"owaAEP4BAPIAAAADIyYAAAECATw\\="','"owf/fgDwFBQA8hQE/0EA/5YAwCA\\="','"owgH/mQQ/gEA8gAAAAQjKAAAASU\\="','"owkCAf+AAOkUFADuFAT/QQD/lhY\\="','"o/8A7QAk/7IAAQDyAAAAAAAAACs\\="','"MwUE8AcAAAAAAAAAAAAAAAAAAMU\\="']],
        4:["name":"Rainbow", "cmd":['"owABAwIBKQAAAAcCAf/aAv8KClc\\="','"owEDgAoG/wAA/38A//8AAP8AAK0\\="','"o/8A/4sA/xAA8QAAgAAAAAAAALY\\="','"MwUE9AcAAAAAAAAAAAAAAAAAAME\\="']],
        5:["name":"Fire", "cmd":['"owABBAICGgACBAECAf9SAdgAAMw\\="','"owEA2h4B/wAAAwCAAAAABCMAADw\\="','"owIAAQAB//8AAAAAAP0ABPEAHbQ\\="','"o///dQD/wAD/HQcAAP8AAP8AAAw\\="','"MwUE9QcAAAAAAAAAAAAAAAAAAMA\\="']],
        7:["name":"Forest", "cmd":['"owABAwIBIAAAAAgCAf8yAcgyFKs\\="','"owEC+jIDbv8A1f8A1f8AEQKAAGk\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE+gcAAAAAAAAAAAAAAAAAAM8\\="']],
        8:["name":"Flower Field-B", "cmd":['"owABCgIFHSAAAAEAAf//AIAUFBI\\="','"owED9gECAAD//wAAEAD7AAD8AEM\\="','"owIdIgAAAQAB//8AgBQUA/YBAug\\="','"owMA//8A/wAQAPsAAPwAHSQAAHE\\="','"owQBAAH//wCAFBQD9gECiwD//1o\\="','"owV/ABAA+wAA/AAdJgAAAQAB/wo\\="','"owb/AIAUFAP2AQIA/wD//wAQAMM\\="','"owf7AAD8AB0oAAABAAH//wCAFAI\\="','"owgUA/YBAosA/wD//xAA+wAA/Co\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE7QgAAAAAAAAAAAAAAAAAANc\\="']],
        105:["name":"Nebula", "cmd":['"owABBAICIAAAAAkAAf8AAYAUFPA\\\\u003d"','"owEDgBQDAAD/bwf+yQb/BADyEIk\\\\u003d"','"owIA9wAaAAILBgABUxUA6hQUAO4\\\\u003d"','"o//tFAH+/v4AAIAAAPYAAAAAACw\\\\u003d"','"MwUE/AcAAAAAAAAAAAAAAAAAAMk\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA+jIDAP8AAP//qv8AAwCAAEA\\="','"owIAAAAjAAAAAwIB/xkA+gAAApw\\="','"owP6AAR//wD//wCg//8A//8UAWs\\="','"o//6AAD/AAAAAAAAAAAAAAAAAFk\\="','"MwUE8QcAAAAAAAAAAAAAAAAAAMQ\\="']]
    ],
    H7050:[ //Smart Ground Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"owABBwIDI1ABAA8CAf8KAgAAAC0\\="','"owECAAAE/wAA/1oA/3gA5QA2ELo\\="','"owIA+gAAAAAjAAEADwIB/woCAII\\="','"owMAAAIAAAT/AAD/WgD/eADyAIk\\="','"owQcEAD6AAAAABoAAAABAgGWMu0\\="','"owUAAAAAAPoyAf+B/xEAgAAAAH8\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUEDAgAAAAAAAAAAAAAAAAAADY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABCwIFIyAAAAECAf9/ANcUFPg\\="','"owEA8BQE/0EA/4IAxxb+giL+AfE\\="','"owIA8wAAAAEjIgAAAQIB/38A7T0\\="','"owMUFAD2FARmC/+xF//jADn/uRE\\="','"owQAAQDyAAAABSMkAAABAgH/f9Q\\="','"owUA7hQUAPEUBP9BAP9jAPIU/pM\\="','"owaAEP4BAPIAAAADIyYAAAECATw\\="','"owf/fgDwFBQA8hQE/0EA/5YAwCA\\="','"owgH/mQQ/gEA8gAAAAQjKAAAASU\\="','"owkCAf+AAOkUFADuFAT/QQD/lhY\\="','"o/8A7QAk/7IAAQDyAAAAAAAAACs\\="','"MwUE8AcAAAAAAAAAAAAAAAAAAMU\\="']],
        4:["name":"Rainbow", "cmd":['"owABAwIBKQAAAAcCAf/aAv8KClc\\="','"owEDgAoG/wAA/38A//8AAP8AAK0\\="','"o/8A/4sA/xAA8QAAgAAAAAAAALY\\="','"MwUE9AcAAAAAAAAAAAAAAAAAAME\\="']],
        5:["name":"Fire", "cmd":['"owABBAICGgACBAECAf9SAdgAAMw\\="','"owEA2h4B/wAAAwCAAAAABCMAADw\\="','"owIAAQAB//8AAAAAAP0ABPEAHbQ\\="','"o///dQD/wAD/HQcAAP8AAP8AAAw\\="','"MwUE9QcAAAAAAAAAAAAAAAAAAMA\\="']],
        7:["name":"Forest", "cmd":['"owABAwIBIAAAAAgCAf8yAcgyFKs\\="','"owEC+jIDbv8A1f8A1f8AEQKAAGk\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE+gcAAAAAAAAAAAAAAAAAAM8\\="']],
        8:["name":"Flower Field-B", "cmd":['"owABCgIFHSAAAAEAAf//AIAUFBI\\="','"owED9gECAAD//wAAEAD7AAD8AEM\\="','"owIdIgAAAQAB//8AgBQUA/YBAug\\="','"owMA//8A/wAQAPsAAPwAHSQAAHE\\="','"owQBAAH//wCAFBQD9gECiwD//1o\\="','"owV/ABAA+wAA/AAdJgAAAQAB/wo\\="','"owb/AIAUFAP2AQIA/wD//wAQAMM\\="','"owf7AAD8AB0oAAABAAH//wCAFAI\\="','"owgUA/YBAosA/wD//xAA+wAA/Co\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE7QgAAAAAAAAAAAAAAAAAANc\\="']],
        105:["name":"Nebula", "cmd":['"owABBAICIAAAAAkAAf8AAYAUFPA\\\\u003d"','"owEDgBQDAAD/bwf+yQb/BADyEIk\\\\u003d"','"owIA9wAaAAILBgABUxUA6hQUAO4\\\\u003d"','"o//tFAH+/v4AAIAAAPYAAAAAACw\\\\u003d"','"MwUE/AcAAAAAAAAAAAAAAAAAAMk\\\\u003d"']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA+jIDAP8AAP//qv8AAwCAAEA\\="','"owIAAAAjAAAAAwIB/xkA+gAAApw\\="','"owP6AAR//wD//wCg//8A//8UAWs\\="','"o//6AAD/AAAAAAAAAAAAAAAAAFk\\="','"MwUE8QcAAAAAAAAAAAAAAAAAAMQ\\="']]
    ],
    H705A:[ //Permanent Outdoor Lights
        1:["name":"Ocean/Deep Sea", "cmd":['"owABBAICHQAAAAEAAf//AAAAALs\\="','"owEA3DICAGT/AAD/AAAAAAAAACo\\="','"owIaAAIKAQIB/ygB1wAAAAAyAYM\\="','"o/8A/5YAAAAAAAAAAAAAAAAAADU\\="','"MwUEywAAAAAAAAAAAAAAAAAAAPk\\="']],
        2:["name":"Romantic", "cmd":['"owABBwIDI1ABAA8CAf8KAgAAAC0\\="','"owECAAAE/wAA/1oA/3gA5QA2ELo\\="','"owIA+gAAAAAjAAEADwIB/woCAII\\="','"owMAAAIAAAT/AAD/WgD/eADyAIk\\="','"owQcEAD6AAAAABoAAAABAgGWMu0\\="','"owUAAAAAAPoyAf+B/xEAgAAAAH8\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUEDAgAAAAAAAAAAAAAAAAAADY\\="']],
        3:["name":"Sunset Glow", "cmd":['"owABCwIFIyAAAAECAf9/ANcUFPg\\="','"owEA8BQE/0EA/4IAxxb+giL+AfE\\="','"owIA8wAAAAEjIgAAAQIB/38A7T0\\="','"owMUFAD2FARmC/+xF//jADn/uRE\\="','"owQAAQDyAAAABSMkAAABAgH/f9Q\\="','"owUA7hQUAPEUBP9BAP9jAPIU/pM\\="','"owaAEP4BAPIAAAADIyYAAAECATw\\="','"owf/fgDwFBQA8hQE/0EA/5YAwCA\\="','"owgH/mQQ/gEA8gAAAAQjKAAAASU\\="','"owkCAf+AAOkUFADuFAT/QQD/lhY\\="','"o/8A7QAk/7IAAQDyAAAAAAAAACs\\="','"MwUE8AcAAAAAAAAAAAAAAAAAAMU\\="']],
        4:["name":"Rainbow", "cmd":['"owABAwIBKQAAAAcCAf/aAv8KClc\\="','"owEDgAoG/wAA/38A//8AAP8AAK0\\="','"o/8A/4sA/xAA8QAAgAAAAAAAALY\\="','"MwUE9AcAAAAAAAAAAAAAAAAAAME\\="']],
        5:["name":"Fire", "cmd":['"owABBAICGgACBAECAf9SAdgAAMw\\="','"owEA2h4B/wAAAwCAAAAABCMAADw\\="','"owIAAQAB//8AAAAAAP0ABPEAHbQ\\="','"o///dQD/wAD/HQcAAP8AAP8AAAw\\="','"MwUE9QcAAAAAAAAAAAAAAAAAAMA\\="']],
        7:["name":"Forest", "cmd":['"owABAwIBIAAAAAgCAf8yAcgyFKs\\="','"owEC+jIDbv8A1f8A1f8AEQKAAGk\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE+gcAAAAAAAAAAAAAAAAAAM8\\="']],
        8:["name":"Flower Field-B", "cmd":['"owABCgIFHSAAAAEAAf//AIAUFBI\\="','"owED9gECAAD//wAAEAD7AAD8AEM\\="','"owIdIgAAAQAB//8AgBQUA/YBAug\\="','"owMA//8A/wAQAPsAAPwAHSQAAHE\\="','"owQBAAH//wCAFBQD9gECiwD//1o\\="','"owV/ABAA+wAA/AAdJgAAAQAB/wo\\="','"owb/AIAUFAP2AQIA/wD//wAQAMM\\="','"owf7AAD8AB0oAAABAAH//wCAFAI\\="','"owgUA/YBAosA/wD//xAA+wAA/Co\\="','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\="','"MwUE7QgAAAAAAAAAAAAAAAAAANc\\="']],
        103:["name":"Aurora", "cmd":['"owABBQICIAAAAAECAf8yAQAAAEk\\="','"owEA+jIDAP8AAP//qv8AAwCAAEA\\="','"owIAAAAjAAAAAwIB/xkA+gAAApw\\="','"owP6AAR//wD//wCg//8A//8UAWs\\="','"o//6AAD/AAAAAAAAAAAAAAAAAFk\\="','"MwUE8QcAAAAAAAAAAAAAAAAAAMQ\\="']],
        104:["name":"Halloween D", "cmd":['"owABCgIFHQACFAoAAacAA8kKCsI="','"owEB\\/AUCiwD\\/\\/2cAAACAAACAALQ="','"owImAAAAAQAB\\/wAA\\/AUFA\\/wKBXQ="','"owMA\\/wAAAAAAAAAAAAAAAAARAE4="','"owT0AACAABoAAQACAAH\\/\\/wD3FCg="','"owUUAP8UAf9pABIA9wAAgAAaZNU="','"owYBAAIAAf\\/mAJkUFAD\\/FAGLAEY="','"owf\\/AAD3EAD3AB0AAAABAAEkCXs="','"owgAxhQUAPkUAosA\\/\\/9ZAAAA96c="','"o\\/8AAIAAAAAAAAAAAAAAAAAAANw="','"MwUEowsAAAAAAAAAAAAAAAAAAJo="']],
        105:["name":"Nebula", "cmd":['"owABBAICIAAAAAkAAf8AAYAUFPA\\\\u003d"','"owEDgBQDAAD/bwf+yQb/BADyEIk\\\\u003d"','"owIA9wAaAAILBgABUxUA6hQUAO4\\\\u003d"','"o//tFAH+/v4AAIAAAPYAAAAAACw\\\\u003d"','"MwUE/AcAAAAAAAAAAAAAAAAAAMk\\\\u003d"']],
        108:["name":"Moonlight", "cmd":['"owABBQICIAACBwUCAeweA74AAMs\\\\u003d"','"owEBnRQDqP/i/+kH////AAAAEGI\\\\u003d"','"owIFtAAgoAEAMgABZB4AAAAAANg\\\\u003d"','"owP2FAMAAFAAHqAeNP8AAAAAAHo\\\\u003d"','"o/8AAAAAAAAAAAAAAAAAAAAAAFw\\\\u003d"','"MwUE+wcAAAAAAAAAAAAAAAAAAM4\\\\u003d"']]
    ]
]    

metadata {
	definition(name: "Govee Lights, Plugs, and Switches Driver", namespace: "Mavrrick", author: "Mavrrick") {
		capability "Switch"
        capability "Actuator"
		capability "ColorControl"
		capability "ColorTemperature"
		capability "Light"
		capability "SwitchLevel"
		capability "ColorMode"
		capability "Refresh"
        capability "Initialize"
        capability "LightEffects"
		
		attribute "colorName", "string"
        attribute "cloudAPI", "string"
        attribute "effectNum", "integer"
   
    }

	preferences {		
		section("Device Info") {
            input("pollRate", "number", title: "Polling Rate (seconds)\nDefault:300", defaultValue:300, submitOnChange: true, width:4)
			input(name: "aRngBright", type: "bool", title: "Alternate Brightness Range", description: "For devices that expect a brightness range of 0-254", defaultValue: false)
            input(name: "lanControl", type: "bool", title: "Enable Local LAN control", description: "This is a advanced feature that only worked with some devices. Do not enable unless you are sure your device supports it", defaultValue: false)
            if (lanControl) {
            input("ip", "text", title: "IP Address", description: "IP address of your Govee light", required: false)
            input("fadeInc", "decimal", title: "% Change each Increment of fade", defaultValue: 1)
            }
            input(name: "debugLog", type: "bool", title: "Debug Logging", defaultValue: false)
		}
		
	}
}

def on() {
    if (lanControl) {
        sendCommandLan(GoveeCommandBuilder("turn",1, "turn"))
        sendEvent(name: "switch", value: "on")}
    else {
         if (device.currentValue("cloudAPI") == "Retry") {
             log.error "on(): CloudAPI already in retry state. Aborting call." 
         } else {
        sendEvent(name: "cloudAPI", value: "Pending")
	    sendCommand("turn", "on")
            }
        }
}

def off() {
    if (lanControl) {
        sendCommandLan(GoveeCommandBuilder("turn",0, "turn"))
        sendEvent(name: "switch", value: "off")}
    else {
        if (device.currentValue("cloudAPI") == "Retry") {
             log.error "off(): CloudAPI already in retry state. Aborting call." 
         } else {
        sendEvent(name: "cloudAPI", value: "Pending")
	    sendCommand("turn", "off")
            }
        }
}

def setColorTemperature(value,level = null,transitionTime = null)
{
    if (debugLog) { log.debug "setColorTemperature(): ${value}"}
    if (value < device.getDataValue("ctMin").toInteger()) { value = device.getDataValue("ctMin")}
    if (value > device.getDataValue("ctMax").toInteger()) { value = device.getDataValue("ctMax")}
    if (debugLog) { log.debug "setColorTemperate(): ColorTemp = " + value }
	def intvalue = value.toInteger()
    if (lanControl) {
        sendCommandLan(GoveeCommandBuilder("colorwc",value, "ct"))
        if (level != null) setLevel(level,transitionTime);
        sendEvent(name: "colorTemperature", value: intvalue)
        sendEvent(name: "switch", value: "on")
        sendEvent(name: "colorMode", value: "CT")
	    setCTColorName(intvalue)
        }
    else {
       if (device.currentValue("cloudAPI") == "Retry") {
            log.error "setColorTemperature(): CloudAPI already in retry state. Aborting call." 
         } else {        
            sendEvent(name: "cloudAPI", value: "Pending")
            if (level != null) setLevel(level,transitionTime);
		    sendCommand("colorTem", intvalue)
       }
    }
}   



def setCTColorName(value)
{
		if (value < 2600) {
			sendEvent(name: "colorName", value: "Warm White")
		}
		else if (value < 3500) {
			sendEvent(name: "colorName", value: "Incandescent")
		}
		else if (value < 4500) {
			sendEvent(name: "colorName", value: "White")
		}
		else if (value < 5500) {
			sendEvent(name: "colorName", value: "Daylight")
		}
		else if (value >=  5500) {
			sendEvent(name: "colorName", value: "Cool White")
		}
	
}





    
def setColor(value) {
    if (debugLog) { log.debug "setColor(): HSBColor = "+ value }
	if (value instanceof Map) {
		def h = value.containsKey("hue") ? value.hue : null
		def s = value.containsKey("saturation") ? value.saturation : null
		def b = value.containsKey("level") ? value.level : null
		setHsb(h, s, b)
	} else {
        if (debugLog) {log.debug "setColor(): Invalid argument for setColor: ${value}"}
    }
}

def setHsb(h,s,b)
{

	hsbcmd = [h,s,b]
    if (debugLog) { log.debug "setHsb(): Cmd = ${hsbcmd}"}

	rgb = hubitat.helper.ColorUtils.hsvToRGB(hsbcmd)
	def rgbmap = [:]
	rgbmap.r = rgb[0]
	rgbmap.g = rgb[1]
	rgbmap.b = rgb[2]   
     
    if (lanControl) {
        if (debugLog) { log.debug "setHsb(): ${rgbmap}"}
        sendCommandLan(GoveeCommandBuilder("colorwc",rgbmap,"rgb"))
      	sendEvent(name: "hue", value: "${h}")
        sendEvent(name: "saturation", value: "${s}")
        sendEvent(name: "switch", value: "on")
   		sendEvent(name: "colorMode", value: "RGB")
    } else {
        if (device.currentValue("cloudAPI") == "Retry") {
            log.error "setHsb(): CloudAPI already in retry state. Aborting call." 
        } else { 
        sendEvent(name: "cloudAPI", value: "Pending")
        sendCommand("color", rgbmap)
        }
    }
    if(100 != device.currentValue("level")?.toInteger()) {
    setLevel(100)
    }
}

def setHue(h)
{
    setHsb(h,device.currentValue( "saturation" )?:100,device.currentValue("level")?:100)
}

def setSaturation(s)
{
	setHsb(device.currentValue("hue")?:0,s,device.currentValue("level")?:100)
}

def setLevel(v,duration = 0){
    if (lanControl && duration>0){
        sendEvent(name: "switch", value: "on")
        fade(v,duration)
    }
    else {
        if (device.currentValue("cloudAPI") == "Retry") {
            log.error "setLevel(): CloudAPI already in retry state. Aborting call." 
        } else {
        setLevel2(v)
        }
    }
}

def setLevel2(v){
        if (lanControl) {
        sendCommandLan(GoveeCommandBuilder("brightness",v, "level"))
        sendEvent(name: "level", value: v)
        sendEvent(name: "switch", value: "on")}
    else {
        sendEvent(name: "cloudAPI", value: "Pending")
		if(aRngBright){v=incBrightnessRange(v)}
        if (debugLog) { log.debug "setLevel2(): Sent Brightness = ${v}"}
		sendCommand("brightness", v)
    }
}

def fade(v,duration){
    curLevel = device.currentValue("level")
    if (v<curLevel){
    fadeRep = (curLevel-v)/fadeInc
    fadeInt = (duration*1000)/fadeRep
    fadeDown(curLevel, v, fadeRep, fadeInt)
        }
    else if (v>curLevel){
    fadeRep = (v-curLevel)/fadeInc
    fadeInt = (duration*1000)/fadeRep
    fadeUp(curLevel, v, fadeRep, fadeInt)
        }
    else {
        if (debugLog) {log.debug "fade(): Level is not changing"}
    }
}

def fadeDown(curLevel,level,fadeInt,fadeRep) {
    if (debugLog) {log.debug "fadeDown(): curLevel ${curLevel}, level ${level}, fadeInt ${fadeInt}, fadeRep ${fadeRep}"}
        v= curLevel-fadeInc
        curLevel = curLevel-fadeInc
    log.debug "fadeDown(): v ${v}"
        sendCommandLan(GoveeCommandBuilder("brightness",v, "level"))
        sendEvent(name: "level", value: v)
    if (level==curLevel)    {
        if (debugLog) {log.debug "fade completed"}
    }
    else {
        if (debugLog) {log.debug "fadeDown(): continueing  fading to ${v}"}
        def int delay= fadeRep
        if (debugLog) {log.debug "fadeDown(): delay ia ${delay}"}
        pauseExecution(delay)
        if (debugLog) {log.debug "fadeDown(): executing loop to fade2() with values curLevel ${curLevel}, level ${level}, fadeInt ${fadeInt}, fadeRep ${fadeRep}"}
        fadeDown(curLevel,level, fadeInt,fadeRep)
    }
} 

def fadeUp(curLevel,level,fadeInt,fadeRep) {
    if (debugLog) {log.debug "fadeUp(): curLevel ${curLevel}, level ${level}, fadeInt ${fadeInt}, fadeRep ${fadeRep}"}
        v= curLevel+fadeInc
        curLevel = curLevel+fadeInc
    log.debug "fadeUp(): v ${v}"
        sendCommandLan(GoveeCommandBuilder("brightness",v, "level"))
        sendEvent(name: "level", value: v)
    if (level==curLevel)    {
        if (debugLog) {log.debug "fade completed"}
    }
    else {
        if (debugLog) {log.debug "fadeUp(): continueing  fading to ${v}"}
        def int delay= fadeRep
        if (debugLog) {log.debug "fadeUp(): delay ia ${delay}"}
        pauseExecution(delay)
        if (debugLog) {log.debug "fadeUp(): executing loop to fade2() with values curLevel ${curLevel}, level ${level}, fadeInt ${fadeInt}, fadeRep ${fadeRep}"}
        fadeUp(curLevel,level, fadeInt,fadeRep)
    }
} 


//Turn Hubitat's 0-100 Brightness range to the 0-254 expected by some devices
def incBrightnessRange(v)
{
	v=v*(254/100)
	return Math.round(v)
}


//Go from 0-254 brightness range from some devices to Hubitat's 0-100 Brightness range. Maybe not needed?
def decBrightnessRange(v)
{
	v=v*(100/254)
	return Math.round(v)
}


private def sendCommand(String command, payload) {


     def params = [
            uri   : "https://developer-api.govee.com",
            path  : '/v1/devices/control',
			headers: ["Govee-API-Key": device.getDataValue("apiKey"), "Content-Type": "application/json"],
            contentType: "application/json",      
			body: [device: device.getDataValue("deviceID"), model: device.getDataValue("deviceModel"), cmd: ["name": command, "value": payload]],
        ]
    

try {

			httpPut(params) { resp ->
				
                if (debugLog) { log.debug "sendCommand(): response.data="+resp.data}
                code = resp.data.code
                if (code == 200 && command == "turn") {
                    sendEvent(name: "cloudAPI", value: "Success")
                    sendEvent(name: "switch", value: payload)
                    } 
                 else if (code == 200 && command == "brightness") {
                    sendEvent(name: "cloudAPI", value: "Success")
                    sendEvent(name: "switch", value: "on")
                    sendEvent(name: "level", value: payload)
                    }
                 else if (code == 200 && command == "colorTem") {
                    sendEvent(name: "cloudAPI", value: "Success")
                    sendEvent(name: "switch", value: "on")
                    sendEvent(name: "colorMode", value: "CT")
                    sendEvent(name: "colorTemperature", value: payload)
                    setCTColorName(intvalue)
                    }
                else if (code == 200 && command == "color") {
                    r=payload.r
					g=payload.g
					b=payload.b
					HSVlst=hubitat.helper.ColorUtils.rgbToHSV([r,g,b])
					hue=HSVlst[0].toInteger()
					sat=HSVlst[1].toInteger()
                    sendEvent(name: "cloudAPI", value: "Success")
                    sendEvent(name: "switch", value: "on")
                    sendEvent(name: "colorMode", value: "RGB")
					sendEvent(name: "hue", value: hue)
					sendEvent(name: "saturation", value: sat)
                    }
                resp.headers.each {
                    if (debugLog) { log.debug "sendCommand(): ${it.name}: ${it.value}" }                   
                    name = it.name
                    value=it.value
                    if (name == "X-RateLimit-Remaining") {
                        state.DailyLimitRemaining = value
                        parent.apiRateLimits("DailyLimitRemaining", value)
                    }
                    if (name == "API-RateLimit-Remaining") {
                        state.MinRateLimitRemainig = value
                        parent.apiRateLimits("MinRateLimitRemainig", value)
                    }
            }
                return resp.data
		}
	} catch (groovyx.net.http.HttpResponseException e) {
		log.error "Error: e.statusCode ${e.statusCode}"
		log.error "${e}"
//        if (debugLog) {log.debug "sendCommand(): ${resp.header}"}
                if (e.statusCode == 429) {
            log.error "sendCommand():Cloud API Returned code 429, Rate Limit exceeded. Attempting again in one min."
                       sendEvent(name: "cloudAPI", value: "Retry")
                       pauseExecution(60000)
                       sendCommand(command, payload)                    
        } 
        else {
          log.error "sendCommand():Unknwon Error. Attempting again in one min." 
            sendEvent(name: "cloudAPI", value: "Retry")
            pauseExecution(60000)
            sendCommand(command, payload)
        }    
		return 'unknown'
	}
}


def getDeviceState(){
/*        if (lanControl) {
        sendCommandLan(GoveeCommandBuilder("devStatus"," " ,"status"))
            
    } else {
	*/ 
		def params = [
			uri   : "https://developer-api.govee.com",
			path  : '/v1/devices/state',
			headers: ["Govee-API-Key": device.getDataValue("apiKey"), "Content-Type": "application/json"],
			query: [device: device.getDataValue("deviceID"), model: device.getDataValue("deviceModel")],
        ]
    


try {

			httpGet(params) { resp ->

                if (debugLog) { log.debug "getDeviceState():"+resp.data.data.properties }
				varPower = resp.data.data.properties.find({it.powerState})?.powerState
				varBrightness = resp.data.data.properties.find({it.brightness})?.brightness
				mapColor = resp.data.data.properties.find({it.color})?.color                
				varCT = resp.data.data.properties.find({it.colorTemInKelvin})?.colorTemInKelvin

                resp.headers.each {
                    if (debugLog) { log.debug "getDeviceState(): ${it.name}: ${it.value}"}                    
                    name = it.name
                    value=it.value
                    if (name == "X-RateLimit-Remaining") {
                        state.DailyLimitRemaining = value
                        parent.apiRateLimits("DailyLimitRemaining", value)
                    }
                    if (name == "API-RateLimit-Remaining") {
                        state.MinRateLimitRemainig = value
                        parent.apiRateLimits("MinRateLimitRemainig", value)
                    }
                }
                //if(aRngBright){varBrightness=decBrightnessRange(varBrightness)}
				//log.debug "Recvd Brightness = ${varBrightness}"
				
				sendEvent(name: "switch", value: varPower)
				
				
				if(varBrightness){
					sendEvent(name: "level", value: varBrightness)
				}
				
				
                if(varCT){
					sendEvent(name: "colorTemperature", value: varCT)
					sendEvent(name: "colorMode", value: "CT")
					setCTColorName(varCT)					
                }
                
				if(mapColor){
					r=mapColor.r
					g=mapColor.g
					b=mapColor.b
					HSVlst=hubitat.helper.ColorUtils.rgbToHSV([r,g,b])
					hue=HSVlst[0].toInteger()
					sat=HSVlst[1].toInteger()
					sendEvent(name: "hue", value: hue)
					sendEvent(name: "saturation", value: sat)
					sendEvent(name: "colorMode", value: "RGB")
				
				}
                if (device.currentValue("cloudAPI") == "Retry") {
                    if (debugLog) {log.error "getDeviceState(): Cloud API in retry state. Reseting "}
                    sendEvent(name: "cloudAPI", value: "Success")
                    }				
				return resp.data
			}
			
	} catch (groovyx.net.http.HttpResponseException e) {
		log.error "Error: e.statusCode ${e.statusCode}"
		log.error "${e}"
		return 'unknown'
	}
//        }
}

def poll() {
    if (debugLog) {log.warn "poll(): Poll Initated"}
	refresh()
}

def refresh() {
    if (debugLog) {log.warn "refresh(): Performing refresh"}
    if(device.getDataValue("retrievable") =='true'){
        if (debugLog) {log.warn "refresh(): Device is retrievable. Setting up Polling"}
        unschedule()
        if (pollRate > 0) runIn(pollRate,poll)
        getDeviceState()
    }
    if (debugLog) runIn(1800, logsOff)
}

def updated() {
    if (debugLog) {log.warn "updated(): Driver Udated"}
    if(device.getDataValue("retrievable") =='true'){
        if (debugLog) {log.warn "updated(): Device is retrievable. Setting up Polling"}
        unschedule()
        if (pollRate > 0) runIn(pollRate,poll)
        getDeviceState()
    }
    if (debugLog) runIn(1800, logsOff) 
}

def configure() {
    if (debugLog) {log.warn "configure(): Configuration Changed"}
    if(device.getDataValue("retrievable") =='true'){
        if (debugLog) {log.warn "configure(): Device is retrievable. Setting up Polling"}
        unschedule()
        if (pollRate > 0) runIn(pollRate,poll)
        getDeviceState()
    }
    if (debugLog) runIn(1800, logsOff) 
}

def initialize(){
    if (debugLog) {log.warn "initialize(): Driver Initializing"}
    state.scenes = sceneEffects
    if (device.getDataValue("apiKey") != parent?.APIKey) {
        if (debugLog) {log.warn "initialize(): Detected new API Key. Applying"}
        device.updateDataValue("apiKey", parent?.APIKey)
    }
    if (device.currentValue("cloudAPI") == "Retry") {
        if (debugLog) {log.error "initialize(): Cloud API in retry state. Reseting "}
        sendEvent(name: "cloudAPI", value: "Initialized")
        }
    if (device.getDataValue("retrievable") =='true'){
        if (debugLog) {log.warn "initialize(): Device is retrievable. Setting up Polling"}
        unschedule()
        if (pollRate > 0) runIn(pollRate,poll)
        getDeviceState()
    }
    if (debugLog) runIn(1800, logsOff)
}


def installed(){
    if (debugLog) {log.warn "installed(): Driver Installed"}
    if(device.getDataValue("commands").contains("color")) {
        sendEvent(name: "hue", value: 0)
        sendEvent(name: "saturation", value: 100)
        sendEvent(name: "level", value: 100) }
    if(device.getDataValue("retrievable") =='true'){
        if (debugLog) {log.warn "installed(): Device is retrievable. Setting up Polling"}
        unschedule()
        if (pollRate > 0) runIn(pollRate,poll)
        getDeviceState()
    }
}

def logsOff() {
    log.warn "debug logging disabled..."
    device.updateSetting("debugLog", [value: "false", type: "bool"])
}

def GoveeCommandBuilder(command1, value1, type) {   
    if (type=="ct") {
        if (debugLog) {log.debug "GoveeCommandBuilder(): Color temp action"}
        JsonBuilder cmd1 = new JsonBuilder() 
        cmd1.msg {
        cmd command1
        data {
            color {
            r 0
            g 0
            b 0
        }
            colorTemInKelvin value1}
    }
    def  command = cmd1.toString()
        if (debugLog) {log.debug "GoveeCommandBuilder():json output ${command}"}
  return command    
    }
   else if (type=="rgb") {
       if (debugLog) {log.debug "GoveeCommandBuilder(): rgb"}
        JsonBuilder cmd1 = new JsonBuilder() 
        cmd1.msg {
        cmd command1
        data {
            color {
            r value1.r
            g value1.g
            b value1.b
                
        }
            colorTemInKelvin 0}
    }
    def  command = cmd1.toString()
       if (debugLog) {log.debug "GoveeCommandBuilder():json output ${command}"}
  return command    
    }
       else if (type=="status") {
           if (debugLog) {log.debug "GoveeCommandBuilder():status"}
        JsonBuilder cmd1 = new JsonBuilder() 
        cmd1.msg {
        cmd command1
        data {
            }
    }
    def  command = cmd1.toString()
           if (debugLog) {log.debug "GoveeCommandBuilder():json output ${command}"}
  return command    
    }
    else { 
        if (debugLog) {log.debug "GoveeCommandBuilder():other action"}
    JsonBuilder cmd1 = new JsonBuilder() 
        cmd1.msg {
        cmd command1
        data {
            value value1}
        }
    def  command = cmd1.toString()
        if (debugLog) {log.debug "GoveeCommandBuilder():json output ${command}"}
  return command
}
}

def sendCommandLan(String cmd) {
  def addr = getIPString();
//    if (debugLog) {log.debug ("sendCommandLan(): ${cmd}")}

  pkt = new hubitat.device.HubAction(cmd,
                     hubitat.device.Protocol.LAN,
                     [type: hubitat.device.HubAction.Type.LAN_TYPE_UDPCLIENT,
                     ignoreResponse    : false,
                     callback: parse,
                     parseWarning: true,
                     destinationAddress: addr])  
  try {    
      if (debugLog) {log.debug("sendCommandLan(): ${pkt} to ip ${addr}")}
    sendHubCommand(pkt) 
//    setLastCommandTime()    
  }
  catch (Exception e) {      
      logDebug e
  }      
}

def getIPString() {
   return ip+":"+commandPort()
}


def parse(message) {  
  log.error "Got something to parseUDP"
  log.error "UDP Response -> ${message}"    
}

// LightEffects commands
// def setEffect(String effectName){
//   def id = lightEffects.find{ it.value == effectName }
//   if (id) setEffect(id.key)
// }

def  setEffect(effectNo) {
//    if (debugLog) {log.debug ("setEffect(): setEffect2 to ${lightEffects.(device.getDataValue("deviceModel")).find{effectNo}}")}
    int effectNumber = effectNo
    if (lightEffects.containsKey((device.getDataValue("deviceModel"))) && (lightEffects.(device.getDataValue("deviceModel")).containsKey(effectNumber))) {
        sceneInfo = lightEffects.(device.getDataValue("deviceModel")).get(effectNumber).name
        sceneCmd = lightEffects.(device.getDataValue("deviceModel")).get(effectNumber).cmd 
        if (debugLog) {log.debug ("setEffect(): Activate effect number ${effectNo} called ${sceneInfo} with command ${sceneCmd}")}
        sendEvent(name: "effectName", value: sceneInfo)
        sendEvent(name: "effectNum", value: effectNumber)
        sendEvent(name: "colorMode", value: "Scene")
//    if (debugLog) {log.debug ("setEffect(): setEffect to ${effectNo}")}
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":'+sceneCmd+'}}}'
        if (debugLog) {log.debug ("setEffect(): command to be sent to ${cmd2}")}
        sendCommandLan(cmd2)
    } else {
        sendEvent(name: "colorMode", value: "Scene")
        sendEvent(name: "effectNum", value: effectNumber)
    // Ocean/Deep Sea Light Effect
    if (effectNo == 1) {
            def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABBAICHQAAAAEAAf//AAAAALs\\=","owEA3DICAGT/AAD/AAAAAAAAACo\\=","owIaAAIKAQIB/ygB1wAAAAAyAYM\\=","o/8A/5YAAAAAAAAAAAAAAAAAADU\\=","MwUEywAAAAAAAAAAAAAAAAAAAPk\\="]}}}'
            if (debugLog) {log.debug ("setEffect(): all other devices command to ${cmd2}")}
            sendEvent(name: "effectName", value: "Ocean/Deep Sea")
            sendCommandLan(cmd2)
     } 
    // Romantic Effect
    if (effectNo == 2) {
        def cmd2 = '{"msg":{"accountTopic":"GA/804fa9a617c337aaa6adf6feeeb3fb95","cmd":"ptReal","cmdVersion":0,"data":{"command":["MwUEBwAAAAAAAAAAAAAAAAAAADU\\="]},"transaction":"u_1682169742270","type":1}}'  
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Romantic")
        sendCommandLan(cmd2)
    }
    // Sunset Effect   
    if (effectNo == 2) {
        def cmd2 = '{"msg":{"accountTopic":"GA/804fa9a617c337aaa6adf6feeeb3fb95","cmd":"ptReal","cmdVersion":0,"data":{"command":["MwUEAQAAAAAAAAAAAAAAAAAAADM\\="]},"transaction":"u_1682169742270","type":1}}'  
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Sunset")
        sendCommandLan(cmd2)
    }    
    // Rainbow Light Effect
    if (effectNo == 4) {
        def cmd2 = '{"msg":{"accountTopic":"GA/804fa9a617c337aaa6adf6feeeb3fb95","cmd":"ptReal","cmdVersion":0,"data":{"command":["MwUEFgAAAAAAAAAAAAAAAAAAACQ\\="]},"transaction":"u_1682169742270","type":1}}'  
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Rainbow")
        sendCommandLan(cmd2)
    }
    // Fire Light Effect
    if (effectNo == 5) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABDAIFHQAAABYAAXAyA7sUFFk\\=","owEC1RQC/1kH////AwD/EwD/ASw\\=","owIpJwAABQIB/5kC/18eAgD/Bog\\=","owMAAAD/////bQf/TQf/Dgf/CH4\\=","owQJEgD8EACAAikhAAAGAgH/mbk\\=","owUC/18eAgD/BgAAAP////9tB4s\\=","owb/TQf/Dgf/CAkQAP4QAP0CKTA\\=","owdDAhQUAAH//wCAFBQB6hQG/2I\\=","owgVB/8ICf8ICf8pB/8HEwAAAIM\\=","owkTAPwAAIADKSQAAAEAAf8AADQ\\=","owqAFBQB6RQG/xUH/zkH/44H/3Y\\=","o/9eB/8HE/8PBxcA+QAA/wQAAAw\\=","MwUEMggAAAAAAAAAAAAAAAAAAAg\\="]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Fire")
        sendCommandLan(cmd2)
    }
    // Cozy Light Effect (static Scene to very warm light)
    if (effectNo == 6) {
        if (debugLog) {log.debug ("setEffect(): Static Scene Cozy Called. Calling CT Command directly")}
        sendCommandLan(GoveeCommandBuilder("colorwc",2000, "ct"))
        if (level != null) setLevel(level,transitionTime);
        sendEvent(name: "colorTemperature", value: 2000)
        sendEvent(name: "switch", value: "on")
	    setCTColorName(2000)
        sendEvent(name: "effectName", value: "Cozy")
    }
    // Forest Effect
    if (effectNo == 7) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABBwIDJgABAAoCAf8ZAbQKCtk\\=","owECyBQF//8AAP//////AP//lBI\\=","owL/ABQBlgAAAAAjAAIPBQIB/wo\\=","owMUA9gAAAH6CgQE/wC0/wBH/5I\\=","owT/4/8AAAAAAAAAABoAAAABAl0\\=","owUB/wUByBQUAu4UAQD/AAAAAJI\\=","o/8AAAAAAAAAAAAAAAAAAAAAAFw\\=","MwUE1AAAAAAAAAAAAAAAAAAAAOY\\="]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Forest")
        sendCommandLan(cmd2)
    }
    // Flower Field Effect
    if (effectNo == 8) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABBQICLKACFAoCAf+WAMwAAJE\\=","owEC4AAH0QBe/wMA/2wA//8A/1g\\=","owJ/AP8AAPUA/wAAABAA2AAaoFk\\=","owMAAAEAATIUAAAAAAD6FAHPAKY\\=","o/9iAAAAAAAAAAAAAAAAAAAAAD4\\=","MwUE3AcAAAAAAAAAAAAAAAAAAOk\\="]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Flower Field")
        sendCommandLan(cmd2)
    }
    // Sunrise Effect
    if (effectNo == 9) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["MwUEAAAAAAAAAAAAAAAAAAAAADI\\\\u003d"]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Sunrise")
        sendCommandLan(cmd2)
    }
    // Sunset Effect
    if (effectNo == 10) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["MwUEAQAAAAAAAAAAAAAAAAAAADM\\\\u003d"]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Sunrise")
        sendCommandLan(cmd2)
    }
    // Warm White Light Effect (static Scene to very warm light)
    if (effectNo == 11) {
        if (debugLog) {log.debug ("setEffect(): Static Scene Warm White Called. Calling CT Command directly")}
        sendCommandLan(GoveeCommandBuilder("colorwc",3500, "ct"))
        if (level != null) setLevel(level,transitionTime);
        sendEvent(name: "colorTemperature", value: 3500)
        sendEvent(name: "switch", value: "on")
	    setCTColorName(3500)
        sendEvent(name: "effectName", value: "Warm White")
    } 
    // Daylight Light Effect    
    if (effectNo == 12) {
        if (debugLog) {log.debug ("setEffect(): Static Scene Daylight Called. Calling CT Command directly")}
        sendCommandLan(GoveeCommandBuilder("colorwc",5600, "ct"))
        if (level != null) setLevel(level,transitionTime);
        sendEvent(name: "colorTemperature", value: 5600)
        sendEvent(name: "switch", value: "on")
	    setCTColorName(5600)
        sendEvent(name: "effectName", value: "Daylight")
    }
    // Cool White Light Effect    
    if (effectNo == 13) {
        if (debugLog) {log.debug ("setEffect(): Static Scene Cool White Called. Calling CT Command directly")}
        sendCommandLan(GoveeCommandBuilder("colorwc",6500, "ct"))
        if (level != null) setLevel(level,transitionTime);
        sendEvent(name: "colorTemperature", value: 6500)
        sendEvent(name: "switch", value: "on")
	    setCTColorName(6500)
        sendEvent(name: "effectName", value: "Cool White")
    }        
    // Illusion Light Effect
    if (effectNo == 101) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABAgQnFR4BAAEFAAJscdkKCks\\=","o/8KAAAAAAAAAAAAAAAAAAAAAFY\\=","MwUEVh0ALQAAAAAAAAAAAAAAAFQ\\="]}}}'  
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Illusion")
        sendCommandLan(cmd2)
    }
    // Aurora Light Effect
    if (effectNo == 103) {    
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABCQIEI0AAAAECAf8ZA8IKA+I\\=","owEC5jIED/8ICwf/B/j//wbpAGs\\=","owIC+AEAgAAjQgAAAQAB/xgDu+Q\\=","owMKA4LnMgT/03LLhf8NS/9S/wE\\=","owSZEgHNAAPkACNEAAABAAH/GIc\\=","owUDuwoDAuUyBAsH/w//CP8G6d0\\=","owYH+P8QAcwBAIAAJkYAAAEAAZk\\=","owf/GAO7CgMC5TIFB/j/Cwf//y4\\=","o/8G6Q//CNz/ERIB3QEAgAAAADY\\=","MwUE8QgAAAAAAAAAAAAAAAAAAMs\\="]}}}'
        if (debugLog) {log.debug ("setEffect(): all other devices command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Aurora")
        sendCommandLan(cmd2)
    }
       
    // Aurora-B Light Effect
    if (effectNo == 501) {
        def cmd2 = '{"msg":{"cmd":"ptReal","data":{"command":["owABCQIEI0AAAAECAf8ZA8IKA+I\\=","owEC5jIED/8ICwf/B/j//wbpAGs\\=","owIC+AEAgAAjQgAAAQAB/xgDu+Q\\=","owMKA4LnMgT/03LLhf8NS/9S/wE\\=","owSZEgHNAAPkACNEAAABAAH/GIc\\=","owUDuwoDAuUyBAsH/w//CP8G6d0\\=","owYH+P8QAcwBAIAAJkYAAAEAAZk\\=","owf/GAO7CgMC5TIFB/j/Cwf//y4\\=","o/8G6Q//CNz/ERIB3QEAgAAAADY\\=","MwUE8QgAAAAAAAAAAAAAAAAAAMs\\="]}}}'
        if (debugLog) {log.debug ("setEffect(): command to ${cmd2}")}
        sendEvent(name: "effectName", value: "Aurora-B")
        sendCommandLan(cmd2)
    }
    }    
//  updateCurrentStatus(null,null,effectNo)  
}

def setNextEffect() {
if (debugLog) {log.debug ("setNextEffect(): Current Color mode ${device.currentValue("colorMode")}")}
      if (device.currentValue("colorMode") != "Scene") {
        setEffect(1)
        } else {
            if (debugLog) {log.debug ("setNextEffect(): Increment to next scene}")}
            int nextEffect = device.currentValue("effectNum").toInteger()+1
            setEffect(nextEffect)
        }  
}
      
def setPreviousEffect() {
if (debugLog) {log.debug ("setNextEffect(): Current Color mode ${device.currentValue("colorMode")}")}
      if (device.currentValue("colorMode") != "Scene") {
        setEffect(8)
        } else {
            if (debugLog) {log.debug ("setNextEffect(): Increment to next scene}")}
            int prevEffect = device.currentValue("effectNum").toInteger()-1
            setEffect(prevEffect)
        }  
}
